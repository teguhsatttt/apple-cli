name: Appleville CLI â€” Runner

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Mode: 1=Plant LOOP, 2=Push Prestige"
        required: false
        default: "1"
      runtime_minutes:
        description: "Durasi sebelum auto-stop (menit)"
        required: false
        default: "30"

jobs:
  run:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    # Map secrets -> env supaya bisa dipakai di `if:`
    env:
      ACCOUNTS_JSON: ${{ secrets.ACCOUNTS_JSON }}
      RAW_COOKIE: ${{ secrets.RAW_COOKIE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Write accounts.json (multi-account)
        if: ${{ env.ACCOUNTS_JSON != '' }}
        run: |
          mkdir -p data
          printf "%s" "${ACCOUNTS_JSON}" > data/accounts.json

      - name: Write akun.txt (single-account)
        if: ${{ env.RAW_COOKIE != '' }}
        run: |
          printf "%s" "${RAW_COOKIE}" > akun.txt

      - name: Sanity check accounts
        run: |
          if [ -f data/accounts.json ]; then
            echo "accounts.json exists"
          elif [ -f akun.txt ]; then
            echo "akun.txt exists"
          else
            echo "::error::No accounts found. Set ACCOUNTS_JSON or RAW_COOKIE secrets."
            exit 1
          fi

      - name: Run CLI with npm start
        env:
          RAW_COOKIE: ${{ env.RAW_COOKIE }}
        run: |
          MODE="${{ github.event.inputs.mode || '1' }}"
          RUNTIME_MIN="${{ github.event.inputs.runtime_minutes || '30' }}"
          printf "%b" "${MODE}\n\n\n" > .gha-input.txt
          timeout "${RUNTIME_MIN}m" npm start < .gha-input.txt
